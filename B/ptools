-module(ptools).
-compile(export_all).


%master takes a list of tasks P, a number of workers N and a function f to apply
master(P, N, f) ->
	master(P, [], N, 0).

%Recolting last workers once job done
master([],R,N,A) ->
 	if 	A=:=0 ->
 			R;
 		true ->
		 	receive
 		 		{Name,Bm} ->
 		 			master([],[{Name,Bm}|R],N,A-1)
 		 	end
 	end;
%Waiting for workers te be free
master(P,R,0,A) -> 
 	receive
 		{Name,Bm} ->
 			master(P, [{Name,Bm}|R], 1, A-1)
 	end;
%Sending worker to his job
master([H|T],R,N,A) ->
	spawn(sudoku, worker,[self(),H]),
	master(T, R, N-1,A+1).

%Worker does his job
worker(Master_PID, {Name,M}) ->
	Master_PID ! {Name, bm(fun()->solve(M) end)}.